/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package jokergamestats;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Chunk;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.io.FileOutputStream;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import com.itextpdf.text.Document;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.Image;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.BaseFont;
import com.itextpdf.text.pdf.PdfPCell;
import java.awt.Desktop;
import java.io.File;
import javax.swing.JFrame;
//import static joker.JokerJFrame2_2.date;
import okhttp3.OkHttpClient;
import okhttp3.Request;

/**
 * @author Vasilis Kerestetzis
 * @author Giorgos Kiopektzis
 * @author Fani Kontou
 * @author Giannis Sykaras
 */

public class JokerStatistic extends javax.swing.JFrame {

    /**
     * Creates new form JokerStatistic
     */
    public JokerStatistic() {
        initComponents();
        setResizable(false);        
        setLocationRelativeTo(null);
        setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton4 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1300, 600));

        jLabel1.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("ΠΡΟΒΟΛΗ ΣΤΑΤΙΣΤΙΚΩΝ ΔΕΔΟΜΕΝΩΝ ΤΖΟΚΕΡ ΚΑΙ ΕΚΤΥΠΩΣΗ ΣΕ ΑΡΧΕΙΟ PDF");

        jTable1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTable1.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
            jTable1.getColumnModel().getColumn(4).setResizable(false);
            jTable1.getColumnModel().getColumn(5).setResizable(false);
            jTable1.getColumnModel().getColumn(6).setResizable(false);
            jTable1.getColumnModel().getColumn(7).setResizable(false);
            jTable1.getColumnModel().getColumn(8).setResizable(false);
            jTable1.getColumnModel().getColumn(9).setResizable(false);
            jTable1.getColumnModel().getColumn(10).setResizable(false);
            jTable1.getColumnModel().getColumn(11).setResizable(false);
            jTable1.getColumnModel().getColumn(12).setResizable(false);
            jTable1.getColumnModel().getColumn(13).setResizable(false);
            jTable1.getColumnModel().getColumn(14).setResizable(false);
            jTable1.getColumnModel().getColumn(15).setResizable(false);
            jTable1.getColumnModel().getColumn(16).setResizable(false);
            jTable1.getColumnModel().getColumn(17).setResizable(false);
            jTable1.getColumnModel().getColumn(18).setResizable(false);
            jTable1.getColumnModel().getColumn(19).setResizable(false);
            jTable1.getColumnModel().getColumn(20).setResizable(false);
            jTable1.getColumnModel().getColumn(21).setResizable(false);
            jTable1.getColumnModel().getColumn(22).setResizable(false);
            jTable1.getColumnModel().getColumn(23).setResizable(false);
            jTable1.getColumnModel().getColumn(24).setResizable(false);
            jTable1.getColumnModel().getColumn(25).setResizable(false);
            jTable1.getColumnModel().getColumn(26).setResizable(false);
            jTable1.getColumnModel().getColumn(27).setResizable(false);
            jTable1.getColumnModel().getColumn(28).setResizable(false);
            jTable1.getColumnModel().getColumn(29).setResizable(false);
            jTable1.getColumnModel().getColumn(30).setResizable(false);
            jTable1.getColumnModel().getColumn(31).setResizable(false);
            jTable1.getColumnModel().getColumn(32).setResizable(false);
            jTable1.getColumnModel().getColumn(33).setResizable(false);
            jTable1.getColumnModel().getColumn(34).setResizable(false);
            jTable1.getColumnModel().getColumn(35).setResizable(false);
            jTable1.getColumnModel().getColumn(36).setResizable(false);
            jTable1.getColumnModel().getColumn(37).setResizable(false);
            jTable1.getColumnModel().getColumn(38).setResizable(false);
            jTable1.getColumnModel().getColumn(39).setResizable(false);
            jTable1.getColumnModel().getColumn(40).setResizable(false);
            jTable1.getColumnModel().getColumn(41).setResizable(false);
            jTable1.getColumnModel().getColumn(42).setResizable(false);
            jTable1.getColumnModel().getColumn(43).setResizable(false);
            jTable1.getColumnModel().getColumn(44).setResizable(false);
        }

        jLabel2.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        jLabel2.setText("ΣΤΑΤΙΣΤΙΚΑ ΑΡΙΘΜΩΝ ΠΟΥ ΕΧΟΥΝ ΚΛΗΡΩΘΕΙ");

        jTable2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTable2.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jScrollPane2.setViewportView(jTable2);
        if (jTable2.getColumnModel().getColumnCount() > 0) {
            jTable2.getColumnModel().getColumn(0).setResizable(false);
            jTable2.getColumnModel().getColumn(1).setResizable(false);
            jTable2.getColumnModel().getColumn(2).setResizable(false);
            jTable2.getColumnModel().getColumn(3).setResizable(false);
            jTable2.getColumnModel().getColumn(4).setResizable(false);
            jTable2.getColumnModel().getColumn(5).setResizable(false);
            jTable2.getColumnModel().getColumn(6).setResizable(false);
            jTable2.getColumnModel().getColumn(7).setResizable(false);
            jTable2.getColumnModel().getColumn(8).setResizable(false);
            jTable2.getColumnModel().getColumn(9).setResizable(false);
            jTable2.getColumnModel().getColumn(10).setResizable(false);
            jTable2.getColumnModel().getColumn(11).setResizable(false);
            jTable2.getColumnModel().getColumn(12).setResizable(false);
            jTable2.getColumnModel().getColumn(13).setResizable(false);
            jTable2.getColumnModel().getColumn(14).setResizable(false);
            jTable2.getColumnModel().getColumn(15).setResizable(false);
            jTable2.getColumnModel().getColumn(16).setResizable(false);
            jTable2.getColumnModel().getColumn(17).setResizable(false);
            jTable2.getColumnModel().getColumn(18).setResizable(false);
            jTable2.getColumnModel().getColumn(19).setResizable(false);
        }

        jLabel3.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        jLabel3.setText("ΣΤΑΤΙΣΤΙΚΑ ΑΡΙΘΜΩΝ ΤΖΟΚΕΡ ΠΟΥ ΕΧΟΥΝ ΚΛΗΡΩΘΕΙ");

        jButton1.setFont(new java.awt.Font("Arial Black", 0, 11)); // NOI18N
        jButton1.setText("Προβολή Στατιστικών");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Arial Black", 0, 11)); // NOI18N
        jButton2.setText("Εκτύπωση Σε Αρχείο PDF");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Arial Black", 0, 11)); // NOI18N
        jButton3.setText("Προβολή Στατιστικών Αποθηκευμένων Κληρώσεων Σε Γραφική Μορφή");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jTextArea1.setBackground(new java.awt.Color(240, 240, 240));
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Arial Black", 0, 11)); // NOI18N
        jTextArea1.setRows(5);
        jTextArea1.setText("Γραμμή 1: Αριθμοί\nΓραμμή 2: Πλήθος Εμφανίσεων\nΓραμμή 3: Καθυστέριση Εμφάνισης");
        jTextArea1.setBorder(null);
        jScrollPane3.setViewportView(jTextArea1);

        jButton4.setFont(new java.awt.Font("Arial Black", 0, 11)); // NOI18N
        jButton4.setText("Επιστροφή στο Τζόκερ");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(240, 24, 24));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/tzoker.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 732, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton1)
                                    .addComponent(jButton2)
                                    .addComponent(jButton3)))
                            .addComponent(jLabel3)
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 630, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(781, 781, 781)
                .addComponent(jLabel6)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton3)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton4)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // Μεταφερομαστε στην σελιδα "ΠΡΟΒΟΛΗ ΣΤΑΤΙΣΤΙΚΩΝ ΣΤΟΙΧΕΙΩΝ ΚΛΗΡΩΣΕΩΝ ΣΕ ΓΡΑΦΙΚΗ ΜΟΡΦΗ"
        JokerStatisticsDB jokerStatisticsDB = new JokerStatisticsDB();
        jokerStatisticsDB.setVisible(true);  
        //Κλεισιμο παράθυρου
        dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // Δημιουρώ το URL που θα καλέσω
        String URL = "https://api.opap.gr/games/v1.0/5104/statistics";

        //Δημιουργώ ένα αντικείμενο OkHttpClient 
        OkHttpClient client = new OkHttpClient();
        
        //Δημιουργώ ένα αντικείμενο Request με όρισμα το URL που θα καλέσω 
        Request request = new Request.Builder().url(URL).build();
        
        //Καλώ το URL και ελέγχω μας φέρνει αποτελέσματα
        try (okhttp3.Response response = client.newCall(request).execute()) {
            if (response.isSuccessful() && response.body() != null) {

                //Καταχώ σε ένα String το αποτέλεσμα
                String responseString = response.body().string();

                //Δημιουργώ ένα αντικείμενο GsonBuilder
                GsonBuilder builder = new GsonBuilder();
                builder.setPrettyPrinting();
                Gson gson = builder.create();

                //Παίρνω τα αποτελέσματα σε JsonObject και δημιουργώ ένα JsonArray το "numbers"
                JsonObject json = gson.fromJson(responseString, JsonObject.class);
                JsonArray numbers = json.get("numbers").getAsJsonArray();

                System.out.println(numbers);

                //Δημιουργώ τον πίνακα για τους αριθμούς
                DefaultTableModel modeln = new DefaultTableModel();

                //Ορίζω τις επικεφαλίδες των αριθμών
                modeln.setColumnIdentifiers(new String[]{"01", "02", "03", "04", "05", "06", "07",
                    "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20",
                    "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33",
                    "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45"});

                //Δημιουργώ τους πίνακες για τις εμφανίσεις και τις καθυστερήσεις των αριθμών
                String[] occurrences = new String[45];
                String[] delays = new String[45];

                //Counter
                int i = 0;
                //Διαπερνάμε τα JsonElements
                for (JsonElement number : numbers) {
                    JsonObject stats = number.getAsJsonObject();
                    
                //Καταχωρώ στον πίνακα τις Κληρώσεις και τις Καθυστερήσεις
                    occurrences[i] = stats.get("occurrences").toString();
                    delays[i] = stats.get("delays").toString();
                    i++;
                }

                //Προσθέτω τις γραμμές και ενημερώνω το model
                modeln.addRow(occurrences);
                modeln.addRow(delays);
                jTable1.setModel(modeln);
                
                //Δημιουργώ τον πίνακα για τους αριθμούς ΤΖΟΚΕΡ
                DefaultTableModel modelj = new DefaultTableModel();
                
                //Ορίζω τις επικεφαλίδες των Joker
                modelj.setColumnIdentifiers(new String[]{"01", "02", "03", "04", "05",
                    "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", 
                    "17", "18", "19", "20"});

                //Δημιουργώ ένα JsonArray το "Joker"
                JsonArray Joker = json.get("bonusNumbers").getAsJsonArray();

                //Δημιουργώ τους πίνακες για τις εμφανίσεις και τις καθυστερήσεις των Joker
                occurrences = new String[20];
                delays = new String[20];

                //Διαπερνώ τα JsonElements bonusNumbers
                int j = 0;
                for (JsonElement bonusNumber : Joker) {
                    JsonObject stats2 = bonusNumber.getAsJsonObject();
  
                //Καταχωρώ στον πίνακα τις Κληρώσεις και τις Καθυστερήσεις
                    occurrences[j] = stats2.get("occurrences").toString();
                    delays[j] = stats2.get("delays").toString();
                    j++;
                }

                //Προσθέτω τις γραμμές και ενημερώνω το model
                modelj.addRow(occurrences);
                modelj.addRow(delays);
                jTable2.setModel(modelj);
            }
        }catch (Exception ex) {
            // Ενημερωτικό μύνημα
            System.out.println(ex);
            JOptionPane.showMessageDialog(null, "Δεν βρήκαμε δεδομένα", "Ενημέρωση", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       //Εκτύπωση του πίνακα σε αρχείο PDF
       
        //Ελέγχω εάν ο χρήστης πάτησε το κουμπί Προβολή στατιστικών
        if (jTable1.getValueAt(1, 0)!=null) {

            try {
                // Δημιουργώ ένα αντικείμενο doc μεγέθους Α3 για να χωρέσουν όλοι οι αριθμοί
                Document doc = new Document(PageSize.A3.rotate());

                //Το όνομα του αρχείου που θα δημιουργήσω
                PdfWriter.getInstance(doc, new FileOutputStream("joker.pdf"));

                //Ανοίγω το Document
                doc.open();

                //Δημιουργώ ένα PdfPTable για τους αριθμούς
                PdfPTable pdfTable = new PdfPTable(jTable1.getColumnCount());
                //Ορίζω το πλάτος του 100% για να χωρέσουν όλοι οι αριθμοί
                pdfTable.setWidthPercentage(100);

                //Ορισμός ελληνικών χαρακτήρων
                BaseFont arialGreek = BaseFont.createFont("C:\\Windows\\Fonts\\arial.ttf", "CP1253", BaseFont.EMBEDDED);
                Font arial = new Font(arialGreek, 14, Font.BOLD);
                Font arial18 = new Font(arialGreek, 18, Font.BOLD);

                //Επικεφαλίδα πίνακα αριθμών
                PdfPCell cell = new PdfPCell(new Paragraph("Στατιστικά των αριθμών που έχουν κληρωθεί", arial));
                cell.setColspan(46); // colspan 
                cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                cell.setBackgroundColor(BaseColor.LIGHT_GRAY);//Χρώμα Background
                pdfTable.addCell(cell);//προσθέτω το κελί στον pdfTable

                //Παίρνω τους αριθμούς από το jTable1 και τους προσθέτω στο pdfTable
                for (int i = 0; i < jTable1.getColumnCount(); i++) {
                    PdfPCell cell1 = new PdfPCell(new Paragraph(jTable1.getColumnName(i)));
                    cell1.setBackgroundColor(BaseColor.LIGHT_GRAY);
                    pdfTable.addCell(cell1);
                }

                //Παίρνω τα στατιστικά των αριθμών από το jTable1 και τους προσθέτω στο pdfTable
                for (int rows = 0; rows < jTable1.getRowCount(); rows++) {
                    for (int cols = 0; cols < jTable1.getColumnCount(); cols++) {
                        pdfTable.addCell(jTable1.getModel().getValueAt(rows, cols).toString());
                    }
                }

                //Δημιουργώ ένα PdfPTable για τους αριθμούς ΤΖΟΚΕΡ
                PdfPTable pdfTable2 = new PdfPTable(jTable2.getColumnCount());
                PdfPCell cell2 = new PdfPCell(new Paragraph("Στατιστικά των αριθμών ΤΖΟΚΕΡ που έχουν κληρωθεί", arial));
                cell2.setColspan(21); // colspan 
                cell2.setHorizontalAlignment(Element.ALIGN_CENTER);
                cell2.setBackgroundColor(BaseColor.LIGHT_GRAY);
                pdfTable2.addCell(cell2);

                //Παίρνω τους αριθμούς ΤΖΟΚΕΡ από το jTable2 και τους προσθέτω στο pdfTable2
                for (int i = 0; i < jTable2.getColumnCount(); i++) {
                    PdfPCell cell1 = new PdfPCell(new Paragraph(jTable2.getColumnName(i)));
                    cell1.setBackgroundColor(BaseColor.LIGHT_GRAY);
                    pdfTable2.addCell(cell1);
                }

                //Παίρνω τα στατιστικά των αριθμών ΤΖΟΚΕΡ από το jTable2 και τους προσθέτω στο pdfTable
                for (int rows = 0; rows < jTable2.getRowCount(); rows++) {
                    for (int cols = 0; cols < jTable2.getColumnCount(); cols++) {
                        pdfTable2.addCell(jTable2.getModel().getValueAt(rows, cols).toString());

                    }
                }

                //Προσθέτω στο PDF έγγραφο την πληροφορία και κλείνω το αρχείο
                
                Image jimage = Image.getInstance("https://kerestetzis.xyz/eap_images/tzoker.png");
                jimage.setAbsolutePosition(500,750);
                jimage.scalePercent(100,100);
                doc.add(jimage);
                
                Image eapimage = Image.getInstance("https://kerestetzis.xyz/eap_images/EAP.png");
                eapimage.setAbsolutePosition(50,50);
                eapimage.scalePercent(100,100);
                doc.add(eapimage);

                Image opapimage = Image.getInstance("https://kerestetzis.xyz/eap_images/Logo.png");
                opapimage.setAbsolutePosition(900,50);
                opapimage.scalePercent(100,100);
                doc.add(opapimage);


                Paragraph header = new Paragraph("Προβολή στατιστικών δεδομένων ΤΖΟΚΕΡ", arial18);
                header.setAlignment(Element.ALIGN_CENTER);
                header.setSpacingBefore(70);
                
                Phrase phrase1 = new Phrase("Γραμμή 1: Αριθμοί"
                                +"\n"+ "Γραμμή 2: Κληρώσεις" + "\n"+
                                "Γραμμή 3: Kαθυστερήσεις", arial);
                
                doc.add(header);                    
                doc.add(Chunk.NEWLINE);
                doc.add(pdfTable);
                doc.add(new Paragraph(""));
                doc.add(Chunk.NEWLINE);
                doc.add(pdfTable2);
                doc.add(Chunk.NEWLINE);
                doc.add(phrase1);
                doc.close();

                //Ανοίγω το αρχείο ώστε να το δεί ο χρήστης
                File myFile = new File("joker.pdf");
                Desktop.getDesktop().open(myFile);

            } catch (Exception ex) {
                System.out.println(ex);
            }
        }
        else{
            // Ενημερωτικό μύνημα
            JOptionPane.showMessageDialog(null, "Παρακαλώ πατήστε το κουμπί Προβολή στατιστικών ", "Ενημέρωση", JOptionPane.INFORMATION_MESSAGE);
        }
    
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // Μεταφερομαστε στην αρχικη σελιδα του JOKER
        JokerMainScreen jokerMainScreen = new JokerMainScreen();
        jokerMainScreen.setVisible(true);
        //Κλεισιμο παράθυρου
        dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JokerStatistic.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JokerStatistic.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JokerStatistic.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JokerStatistic.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JokerStatistic().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package jokergamestats;

import javax.swing.JOptionPane;
import okhttp3.OkHttpClient;
import okhttp3.Request;
import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.EntityTransaction;
import javax.persistence.Persistence;
import javax.persistence.Query;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;


/**
 * @author Vasilis Kerestetzis
 * @author Giorgos Kiopektzis
 * @author Fani Kontou
 * @author Giannis Sykaras
 */

public class JokerDBControl extends javax.swing.JFrame {
    
 //Entity Manager & Controllers
    EntityManagerFactory emf = Persistence.createEntityManagerFactory("JokerGameStatsPU");
    EntityManager em = emf.createEntityManager();
    EntityTransaction tx = em.getTransaction();
    DrawsJpaController djc = new DrawsJpaController(emf);
    PrizecategoriesJpaController pjc = new PrizecategoriesJpaController(emf);   

    /**
     * Creates new form JokerDBControl
     */
    public JokerDBControl() {
        initComponents();        
        setResizable(false);
        setLocationRelativeTo(null);
        setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        jButton3 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAlwaysOnTop(true);

        jLabel1.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("ΔΙΑΧΕΙΡΙΣΗ ΔΕΔΟΜΕΝΩΝ ΤΖΟΚΕΡ");

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial Black", 0, 11)); // NOI18N
        jLabel2.setText("ID Κλήρωσης");

        jButton1.setFont(new java.awt.Font("Arial Black", 0, 11)); // NOI18N
        jButton1.setText("Εμφάνιση Δεδομένων Κλήρωσης");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Arial Black", 0, 11)); // NOI18N
        jButton2.setText("Αποθήκευση Δεδομένων Κλήρωσης");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Arial Black", 0, 11)); // NOI18N
        jButton3.setText("Εύρεση Κληρώσεων");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null}
            },
            new String [] {
                "1ος", "2ος", "3ος", "4ος", "5ος", "ΤΖΟΚΕΡ"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
            jTable1.getColumnModel().getColumn(4).setResizable(false);
            jTable1.getColumnModel().getColumn(5).setResizable(false);
        }

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Κατηγορίες επιτυχιών", "Επιτυχίες", "Κέρδη ανά επιτυχία"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable2);
        if (jTable2.getColumnModel().getColumnCount() > 0) {
            jTable2.getColumnModel().getColumn(0).setResizable(false);
            jTable2.getColumnModel().getColumn(1).setResizable(false);
            jTable2.getColumnModel().getColumn(2).setResizable(false);
        }

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("ΠΙΝΑΚΑΣ ΕΠΙΤΥΧΙΩΝ");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("ΝΙΚΗΤΡΙΑ ΣΤΗΛΗ");

        jLabel5.setFont(new java.awt.Font("Arial Black", 0, 11)); // NOI18N
        jLabel5.setText("Από");

        jLabel6.setFont(new java.awt.Font("Arial Black", 0, 11)); // NOI18N
        jLabel6.setText("Έως");

        jLabel7.setFont(new java.awt.Font("Arial Black", 0, 11)); // NOI18N
        jLabel7.setText("ID's Κληρώσεων");

        jButton4.setFont(new java.awt.Font("Arial Black", 0, 11)); // NOI18N
        jButton4.setText("Διαγραφή Δεδομένων Κλήρωσης");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Arial Black", 0, 11)); // NOI18N
        jButton5.setText("Διαγραφή Δεδομένων Κληρώσεων εντός εύρους ημερομηνιών");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/EAP.png"))); // NOI18N

        jButton7.setFont(new java.awt.Font("Arial Black", 0, 11)); // NOI18N
        jButton7.setText("Επιστροφή");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(240, 24, 24));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/tzoker.png"))); // NOI18N

        jButton6.setFont(new java.awt.Font("Arial Black", 0, 11)); // NOI18N
        jButton6.setText("Εμφάνιση Δεδομένων Κλήρωσης");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton8.setFont(new java.awt.Font("Arial Black", 0, 11)); // NOI18N
        jButton8.setText("Προβολή Στατιστικών Αποθηκευμένων Κληρώσεων Σε Γραφική Μορφή");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(80, 80, 80))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton7)
                        .addGap(111, 111, 111)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(149, 149, 149)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(46, 46, 46)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 429, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(166, 166, 166)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 533, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel8))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton5)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel9))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 180, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(240, 240, 240)
                        .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                            .addComponent(jDateChooser2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(87, 87, 87))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(90, 90, 90))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton7)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 83, Short.MAX_VALUE)
                        .addComponent(jLabel8))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton3)
                            .addComponent(jButton6))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jTextField1.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
       //Παίρνω το drawId και καλώ το κατάλληλο url
        String select = jTextField1.getText();
        String urlToCall = "https://api.opap.gr/draws/v3.0/5104/" + select;
        

        //Δημιουργώ  αντικείμενο OkHttpClient 
        OkHttpClient client = new OkHttpClient();
        //Δημιουργούμε  αντικείμενο Request στο οποίο ορίζω το url που θα καλέσω 
        Request request = new Request.Builder().url(urlToCall).build();

        //Προσπαθώ να ζητήσω το url και ελέγχω εάν παίρνω αποτελέσματα
        try (okhttp3.Response response = client.newCall(request).execute()) {
            if (response.isSuccessful() && response.body() != null) {

                //Καταχωρώ σε  String το αποτέλεσμα
                String responseString = response.body().string();

                //Δημιουργώ αντικείμενο GsonBuilder
                GsonBuilder builder = new GsonBuilder();
                builder.setPrettyPrinting();
                Gson gson = builder.create();

                //Βάζω τα αποτελέσματα σε JsonObject και φτιάχνω ένα JsonArray
                JsonObject json = gson.fromJson(responseString, JsonObject.class);
                System.out.println(json);

                JsonObject winningNumbers = json.getAsJsonObject("winningNumbers");
                System.out.println(winningNumbers);
                JsonArray numbers = winningNumbers.get("list").getAsJsonArray();
                JsonArray joker = winningNumbers.get("bonus").getAsJsonArray();
                System.out.println(numbers);
                System.out.println(joker);

                //Δημιουργώ 2 models για τους πίνακες
                DefaultTableModel model = new DefaultTableModel();
                DefaultTableModel model2 = new DefaultTableModel();

                //Ορίζω τις επικεφαλίδες των πινάκων
                model.setColumnIdentifiers(new String[]{"1oς", "2oς", "3oς", "4oς", "5oς", "Joker"});
                model2.setColumnIdentifiers(new String[]{"Κατηγορίες επιτυχιών", "Επιτυχίες", "Κέρδη ανά επιτυχία"});

                String[] n = new String[6];
                for (int i = 0; i < numbers.size(); i++) {
                    n[i] = numbers.get(i).getAsString();
                }
                n[5] = joker.getAsString();
                model.addRow(n);

                //Στοιχίζω τα δεδομένα των πίνακων στο κέντρο
                DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
                centerRenderer.setHorizontalAlignment(javax.swing.JLabel.CENTER);
                jTable1.setDefaultRenderer(Object.class, centerRenderer);
                jTable1.setModel(model);

                //Φτιάχνω τον πίνακα "prizeCategories" 
                JsonArray prizeCategories = json.get("prizeCategories").getAsJsonArray();
                System.out.println(prizeCategories);
                String[] p = new String[3];

                //Διαπερνάω τα JsonElements
                for (JsonElement element : prizeCategories) {
                    switch (element.getAsJsonObject().get("id").getAsInt()) {
                        case 1:
                            p[0] = "5+1";
                            break;
                        case 2:
                            p[0] = "5";
                            break;
                        case 3:
                            p[0] = "4+1";
                            break;
                        case 4:
                            p[0] = "4";
                            break;
                        case 5:
                            p[0] = "3+1";
                            break;
                        case 6:
                            p[0] = "3";
                            break;
                        case 7:
                            p[0] = "2+1";
                            break;
                        case 8:
                            p[0] = "1+1";
                            break;
                    }
                    p[1] = element.getAsJsonObject().get("winners").getAsString();
                    p[2] = element.getAsJsonObject().get("divident").getAsString();
                    model2.addRow(p);
                }

                //Στοιχίζω τα δεδομένα των πίνακων στο κέντρο
                DefaultTableCellRenderer centerRenderer2 = new DefaultTableCellRenderer();
                centerRenderer.setHorizontalAlignment(javax.swing.JLabel.CENTER);
                jTable2.setDefaultRenderer(Object.class, centerRenderer);
                jTable2.setModel(model2);

                // Ειδοποίηση ότι εισήχθησαν τα δεδομένα
                JOptionPane.showMessageDialog(this, "Τα δεδομένα για το DrawId: " + select + " εισήχθησαν", "Ειδοποίηση", JOptionPane.INFORMATION_MESSAGE);
            } else {
                // Ειδοποίηση ότι δεν υπάρχουν δεδομένα
                JOptionPane.showMessageDialog(this, "Δεν υπάρχουν δεδομένα για το DrawId: " + select, "Ειδοποίηση", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (Exception ex) {
            // Ειδοποίηση ότι δεν υπάρχουν δεδομένα
            JOptionPane.showMessageDialog(this, "Δεν υπάρχουν δεδομένα για το DrawId: " + select, "Ειδοποίηση", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        //προβάλλονται οι κληρώσεις που έχουν γίνει εντός τους εύρους ημερομηνιών
        try {
            //Οι ημερομηνίες που επέλεξε ο χρήστης
            Date date1 = jDateChooser1.getDate();
            Date date2 = jDateChooser2.getDate();
            SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
            SimpleDateFormat format2 = new SimpleDateFormat("dd-MM-yyyy");
            String stringDate1 = format.format(date1);
            String stringDate2 = format.format(date2);
            System.out.println(stringDate1 + stringDate2);

            //Καλώ το κατάλληλο url
            String urlToCall = "https://api.opap.gr/draws/v3.0/5104/draw-date/" + stringDate1 + "/" + stringDate2 + "/draw-id";
            System.out.println(urlToCall);

            //Δημιουργώ αντικείμενο OkHttpClient 
            OkHttpClient client = new OkHttpClient();
            //Δημιουργώ ένα αντικείμενο Request με όρισμα το url που θα καλέσω 
            Request request = new Request.Builder().url(urlToCall).build();

            //Ξεκινώ και ζητάω το url και ελέγχω εάν μου φέρνει αποτελέσματα
            try (okhttp3.Response response = client.newCall(request).execute()) {

                if (response.isSuccessful() && response.body() != null) {

                    //Καταχωρώ σε ένα String το αποτέλεσμα
                    String responseString = response.body().string();

                    //Δημιουργώ ένα αντικείμενο GsonBuilder
                    GsonBuilder builder = new GsonBuilder();
                    builder.setPrettyPrinting();
                    Gson gson = builder.create();
                    //Παίρνω τα αποτελέσματα σε JsonObject και δημιουργω ένα JsonArray
                    JsonArray json = gson.fromJson(responseString, JsonArray.class);

                    System.out.println(json);

                    //Δημιουργώ ένα Model
                    DefaultComboBoxModel model = new DefaultComboBoxModel();

                    //Διαπερνάω τα δεδομένα id των κληρώσεων
                    for (JsonElement jsonElement : json) {
                        String data = jsonElement.getAsString();
                        model.addElement(data);
                    }

                    //Προσθέτω τα drawid στο jComboBox1
                    jComboBox1.setModel(model);

                    // Ειδοποίηση ότι τα δεδομένα εισήχθησαν
                    JOptionPane.showMessageDialog(this, "Τα DrawID των κληρώσεων από " + format2.format(date1)
                            + " έως " + format2.format(date2) + " εισήχθησαν", "Ειδοποίηση", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    // Ειδοποίηση ότι δεν υπάρχουν διαθέσιμα δεδομένα
                    JOptionPane.showMessageDialog(this, "Δεν υπάρχουν διαθέσιμα δεδομένα από " + format2.format(date1)
                            + " έως " + format2.format(date2), "Ειδοποίηση", JOptionPane.INFORMATION_MESSAGE);
                }
            } catch (Exception ex) {
                // Ειδοποίηση ότι δεν υπάρχουν διαθέσιμα δεδομένα
                JOptionPane.showMessageDialog(this, "Δεν υπάρχουν διοαθέσιμα δεδομένα από " + format2.format(date1)
                        + " έως " + format2.format(date2), "Ειδοποίηση", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (Exception ex) {
            // Ειδοποίηση για επιλογή εύρους ημερομηνιών
            JOptionPane.showMessageDialog(this, "Παρακαλώ επιλέξτε το εύρος των ημερομηνιών", "Ειδοποίηση", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int drawId = Integer.parseInt(jTextField1.getText());
        System.out.println(drawId);

        Query query = em.createNamedQuery("Draws.findByDrawid");
        query.setParameter("drawid", drawId);

        //Ελέγχουμε εάν υπάρχουν δεδομένα στην Database
        if (query.getResultList().isEmpty()) {
            try {
                String no1 = jTable1.getValueAt(0, 0).toString();
                String no2 = jTable1.getValueAt(0, 1).toString();
                String no3 = jTable1.getValueAt(0, 2).toString();
                String no4 = jTable1.getValueAt(0, 3).toString();
                String no5 = jTable1.getValueAt(0, 4).toString();
                String joker = jTable1.getValueAt(0, 5).toString();

                Draws d = new Draws(drawId, no1, no2, no3, no4, no5, joker);
                //Με τον DrawsJpaController στέλνουμε το αντικείμενο στην Database
                djc.create(d);

                int j = 0;
                for (int i = 0; i <= 7; i++) {
                    int winners = Integer.parseInt(jTable2.getValueAt(i, 1).toString());
                    float divident = Float.parseFloat(jTable2.getValueAt(i, 2).toString());
                    System.out.println(winners + " " + divident);
                    Prizecategories p = new Prizecategories(i,divident,winners, d);
                    //PrizecategoriesJpaController
                    pjc.create(p);
                }

                // Ενημερωτικό μύνημα
                JOptionPane.showMessageDialog(this, "Τα δεδομένα της κλήρωσης καταχωρήθηκαν στην βάση δεδομένων", "Ενημέρωση", JOptionPane.INFORMATION_MESSAGE);
            } catch (Exception ex) {
                // Ενημερωτικό μύνημα
                System.out.println(ex);
                JOptionPane.showMessageDialog(this, "Τα δεδομένα της κλήρωσης δεν καταχωρήθηκαν στην βάση δεδομένων", "Ενημέρωση", JOptionPane.INFORMATION_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Η κλήρωση υπάρχει ήδη στην βάση δεδομένων", "Ενημέρωση", JOptionPane.INFORMATION_MESSAGE);
        }        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // Μεταφερομαστε στην αρχικη σελιδα του JOKER
        JokerMainScreen jokerMainScreen = new JokerMainScreen();
        jokerMainScreen.setVisible(true);
        //Κλεισιμο παράθυρου
        dispose();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        /*Με την επιλογή της διαγραφής δεδομένων κλήρωσης διαγράφονται από τη βάση δεδομένων
         *τα σχετικά δεδομένα. Πριν την διαγραφή υπάρχει σχετική ερώτηση επιβεβαίωσης.
        */
        
        int option = JOptionPane.showConfirmDialog(this, "Tο σύστημα θα διαγράψει από τη βάση δεδομένων τα δεδομένα \n"
                + "της κλήρωσης με drawId " + jTextField1.getText() + ".\nΕίστε βέβαιοι;",
                "Διαγραφή Δεδομένων", JOptionPane.YES_NO_OPTION);
        if (option == JOptionPane.YES_OPTION) {
            try {
                // Διαγραφή Prizecategories & Draws
                tx.begin();
                int drawid = Integer.parseInt(jTextField1.getText().toString());
                Draws drawidFk = djc.findDraws(drawid);

                // Διαγραφή Prizecategories
                Query query = em.createNamedQuery("Prizecategories.deleteByDrawID");
                query.setParameter("drawidFk", drawidFk).executeUpdate();

                // Διαγραφή Draws
                Query query2 = em.createNamedQuery("Draws.deleteByDrawid");
                query2.setParameter("drawid", drawid).executeUpdate();
                tx.commit();
                JOptionPane.showMessageDialog(this, "Τα δεδομένα του DrawID:" + drawid + " διαγράφηκαν από την Database", "Διαγραφή Δεδομένων",
                        JOptionPane.INFORMATION_MESSAGE);
            } catch (Exception ex) {
                System.out.println(ex);
            }
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        /*Για τη διαγραφή των κληρώσεων χρειάζομαι πρώτα να φέρω τα DrawID που
         *βρίσκονται εντός του εύρους ημερομηνιών που ζήτησε ο χρήστης
        */
        
        try {
            //Οι ημερομηνίες που επέλεξε ο χρήστης
            Date date1 = jDateChooser1.getDate();
            Date date2 = jDateChooser2.getDate();
            SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
            SimpleDateFormat format2 = new SimpleDateFormat("dd-MM-yyyy");
            String stringDate1 = format.format(date1);
            String stringDate2 = format.format(date2);
            System.out.println(stringDate1 + stringDate2);

            //Καλώ το κατάλληλο url
            String urlToCall = "https://api.opap.gr/draws/v3.0/5104/draw-date/" + stringDate1 + "/" + stringDate2 + "/draw-id";
            System.out.println(urlToCall);

            //Δημιουργώ αντικείμενο OkHttpClient 
            OkHttpClient client = new OkHttpClient();
            //Δημιουργώ ένα αντικείμενο Request με όρισμα το url που θα καλέσω 
            Request request = new Request.Builder().url(urlToCall).build();

            //Ξεκινώ και ζητάω το url και ελέγχω εάν μου φέρνει αποτελέσματα
            try (okhttp3.Response response = client.newCall(request).execute()) {

                if (response.isSuccessful() && response.body() != null) {

                    //Καταχωρώ σε ένα String το αποτέλεσμα
                    String responseString = response.body().string();

                    //Δημιουργώ ένα αντικείμενο GsonBuilder
                    GsonBuilder builder = new GsonBuilder();
                    builder.setPrettyPrinting();
                    Gson gson = builder.create();
                    //Παίρνω τα αποτελέσματα σε JsonObject και δημιουργω ένα JsonArray
                    JsonArray json = gson.fromJson(responseString, JsonArray.class);

                    System.out.println(json);
                    
                    int option = JOptionPane.showConfirmDialog(this, "Tο σύστημα θα διαγράψει από τη βάση δεδομένων τα δεδομένα \n"
                            + "των Κληρώσεων με DrawID: " + json + "\nΕίστε βέβαιοι;",
                            "Διαγραφή Δεδομένων", JOptionPane.YES_NO_OPTION);
                    if (option == JOptionPane.YES_OPTION) {
                        try {
                            // Διαγραφή Prizecategories & Draws
                            tx.begin();
                            String start = json.get(0).getAsString();
                            String end = json.get(json.size() - 1).getAsString();
                            // Διαγραφή Prizecategories
                            Query query = em.createNativeQuery("DELETE FROM Prizecategories WHERE drawidFk BETWEEN " + start + " AND " + end);
                            query.executeUpdate();

                            // Διαγραφή Draws
                            Query query2 = em.createNativeQuery("DELETE FROM Draws WHERE drawid BETWEEN " + start + " AND " + end);
                            query2.executeUpdate();
                            tx.commit();
                            JOptionPane.showMessageDialog(this, "Τα δεδομένα των Drawid: " + json + "\nδιαγράφηκαν από την Database", "Διαγραφή Δεδομένων",
                                    JOptionPane.INFORMATION_MESSAGE);
                        } catch (Exception ex) {
                            System.out.println(ex);
                        }
                    }

                } else {
                    // Ενημερωτικό μύνημα
                    JOptionPane.showMessageDialog(null, "Δεν υπάρχουν δεδομένα", "Ενημέρωση", JOptionPane.INFORMATION_MESSAGE);
                }
            } catch (Exception ex) {
                // Ενημερωτικό μύνημα
                System.out.println(ex);
                JOptionPane.showMessageDialog(null, "Δεν υπάρχουν δεδομένα", "Ενημέρωση", JOptionPane.INFORMATION_MESSAGE);

            }
        } catch (Exception ex) {
            // Ενημερωτικό μύνημα
            System.out.println(ex);
            JOptionPane.showMessageDialog(null, "Παρακαλώ επιλέξτε το εύρος των ημερομηνιών", "Ενημέρωση", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        /*Καλούμε τη μέθοδο jButton1ActionPerformer, αφού πρώτα βάλουμε στο
         *jTextField1 (το οποίο και διαβάζει) την επιλεγμένη τιμή από το
         *jComvoBox1
        */
        jTextField1.setText(jComboBox1.getSelectedItem().toString());
        this.jButton1ActionPerformed(evt);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // Μεταφερομαστε στην σελιδα "ΠΡΟΒΟΛΗ ΣΤΑΤΙΣΤΙΚΩΝ ΣΤΟΙΧΕΙΩΝ ΚΛΗΡΩΣΕΩΝ ΣΕ ΓΡΑΦΙΚΗ ΜΟΡΦΗ"
        JokerStatisticsDB jokerStatisticsDB = new JokerStatisticsDB();
        jokerStatisticsDB.setVisible(true);
        //Κλεισιμο παράθυρου
        dispose();
    }//GEN-LAST:event_jButton8ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JokerDBControl.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JokerDBControl.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JokerDBControl.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JokerDBControl.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new JokerDBControl().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JComboBox<String> jComboBox1;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
